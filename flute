#!/usr/bin/env php
<?php

use Flute\Core\App;
use Flute\Core\Console\Command\CacheClearCommand;
use Flute\Core\Console\Command\GenerateMigrationCommand;
use Flute\Core\Console\Command\GenerateModuleCommand;
use Flute\Core\Console\Command\ListRoutesCommand;
use Flute\Core\Console\Command\RouteDetailCommand;
use Flute\Core\Console\Command\TemplateCacheClearCommand;
use Flute\Core\Console\Command\LogsClearCommand;
use Flute\Core\Console\Command\LogsCleanupCommand;
use Flute\Core\Console\Command\RunCronCommand;

error_reporting(E_ALL & ~E_DEPRECATED & ~E_USER_DEPRECATED);
ini_set('display_errors', '0');

define('FLUTE_START', microtime(true));
define('BASE_PATH', __DIR__.DIRECTORY_SEPARATOR);

/**
 * Get the application instance
 * 
 * @var App $app
 */
$app = require_once BASE_PATH.'bootstrap/app.php';

$console = $app->getConsole();

// We getting from the container (because arguments.)
$console->add($app->get(TemplateCacheClearCommand::class));
$console->add($app->get(LogsClearCommand::class));
$console->add($app->get(LogsCleanupCommand::class));
$console->add($app->get(CacheClearCommand::class));
$console->add($app->get(GenerateMigrationCommand::class));
$console->add($app->get(GenerateModuleCommand::class));
$console->add($app->get(ListRoutesCommand::class));
$console->add($app->get(RouteDetailCommand::class));
$console->add($app->get(RunCronCommand::class));

/**
 * Run the application
 */
$app->run();
